pipeline {
    agent any
    
    parameters {
        string(name: 'LOCAL_VARS_DIR', description: 'Path to the local variables file directory', defaultValue:'/home/sergey/projects/eurotunnel')
    }

    environment {
        TF_VAR_FILE="variables.local.json"
        TF_VAR_PROVISION=0
        AWS_ACCESS_KEY = credentials("AWS_ACCESS_KEY")
        AWS_SECRET_KEY = credentials("AWS_SECRET_KEY")
    }

    options {
        disableConcurrentBuilds()
        timestamps()
        ansiColor('xterm')
    }

    stages {
        stage('Plan environment') {
            steps {
                sh "cp ${params.LOCAL_VARS_DIR}/${env.TF_VAR_FILE} ."
                sh "terraform init"
                sh "terraform plan -var-file=\"${env.TF_VAR_FILE}\""
                timeout(5) {
                    input(id: "Deploy", message: "Procced with deploy?", ok: 'Yes')
                }
            }
        }
        stage('Deploy environment') {
            steps {
                sh "terraform apply -var-file=\"${env.TF_VAR_FILE}\" -auto-approve"
            }
        }
        stage('Provision environment') {
            environment {
                IP = sh (
                        script: 'terraform output public_ip',
                        returnStdout: true
                    ).trim()
                SSH_PORT =  sh (
                        script: 'terraform output ssh_port',
                        returnStdout: true
                    ).trim()
            }
            steps {
                sh "ansible-playbook -i '${IP}:${SSH_PORT},' --ssh-common-args='-o StrictHostKeyChecking=no' --extra-vars \"@${env.TF_VAR_FILE}\" ansible/provision.yml"
            }
        }
        stage('Test deployment') {
            steps {
                sh 'curl 2ip.ru'
            }
        }
    }
}
